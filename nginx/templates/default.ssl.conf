# ===============================
# default.ssl.conf
# ===============================
# Configura NGINX como API Gateway con HTTPS (TLS).
# Ideal para entornos productivos donde se requiere cifrado de tráfico y buenas prácticas de seguridad.

# ================================================
# BLOQUE UPSTREAM: define el grupo de servicios backend
# Puedes agregar o quitar servidores según la necesidad.
# NGINX distribuirá el tráfico de manera round-robin por defecto.
# ================================================
upstream api_backend {
    server ${SERVICE1_HOST}:${SERVICE1_PORT};
    server ${SERVICE2_HOST}:${SERVICE2_PORT};
}

# ================================================
# BLOQUE HTTPS (puerto 443): tráfico seguro con TLS
# ================================================
server {
    listen 443 ssl;                       # Escucha en el puerto 443 para HTTPS
    server_name example.com;             # ❗ Reemplaza con tu dominio real o localhost para pruebas

    # ================================================
    # Certificados TLS
    # Asegúrate de que los archivos existan en el contenedor o sistema.
    # Puedes montarlos como volumen desde tu host en docker-compose.yml
    # ================================================
    ssl_certificate     /etc/nginx/certs/fullchain.pem;    # Certificado público + cadena intermedia
    ssl_certificate_key /etc/nginx/certs/privkey.pem;       # Clave privada del certificado

    # ================================================
    # Buenas prácticas de seguridad TLS
    # Puedes personalizar según tus requisitos o política de seguridad
    # ================================================
    ssl_protocols TLSv1.2 TLSv1.3;                          # TLSv1.2 y TLSv1.3 son seguros
    ssl_ciphers HIGH:!aNULL:!MD5;                           # Evita cifrados débiles
    ssl_prefer_server_ciphers on;

    # ================================================
    # Encabezados de seguridad HTTP adicionales
    # ================================================
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options DENY;
    add_header X-XSS-Protection "1; mode=block";

    # ================================================
    # BLOQUE DE PROXY: redirige todas las peticiones al backend
    # Puedes usar location /api, /auth, etc. si haces path-routing
    # ================================================
    location / {
        proxy_pass http://api_backend;

        # Headers importantes para forwarding de IP y hostname original
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
}

# ================================================
# BLOQUE REDIRECCIÓN HTTP → HTTPS
# Este bloque asegura que todo el tráfico se redirija automáticamente a HTTPS.
# ================================================
server {
    listen 80;
    server_name example.com;   # ❗ Debe coincidir con el de arriba o usar "_" para todos los dominios

    return 301 https://$host$request_uri;  # Redirección permanente a HTTPS
}

# ===============================
# default.cache.conf
# ===============================
# Configura un API Gateway con caching para respuestas HTTP.
# Ideal para reducir la carga en servicios backend que devuelven datos estáticos
# o que no cambian con frecuencia (ej. catálogos, banners, etc.)

# Upstream con servidores backend
upstream api_backend {
    server ${SERVICE1_HOST}:${SERVICE1_PORT};
    server ${SERVICE2_HOST}:${SERVICE2_PORT};
    # Puedes agregar más servidores aquí si lo necesitas
}

# Definición del cache de proxy
proxy_cache_path /tmp/nginx_cache levels=1:2 keys_zone=api_cache:10m
                 inactive=60m use_temp_path=off max_size=100m;

# Zona de caché:
# - /tmp/nginx_cache: carpeta donde se almacenan los archivos en disco
# - levels=1:2: subdirectorios para organizar archivos
# - keys_zone=api_cache:10m: nombre del espacio en memoria para índices (10MB)
# - inactive=60m: si no se accede en 60 minutos, se purga
# - max_size=100m: máximo 100MB de caché en disco

server {
    listen 80;

    location / {
        # Activar el uso del caché para este bloque
        proxy_cache api_cache;

        # Nombre de la clave (basada en la URL completa)
        proxy_cache_key "$scheme$request_method$host$request_uri";

        # Tiempo por defecto que se almacena la respuesta
        proxy_cache_valid 200 302 10m;  # Éxito y redirecciones: 10 min
        proxy_cache_valid 404 5m;       # Errores 404: 5 min

        # Pasar al backend si no hay caché
        proxy_pass http://api_backend;

        # Headers necesarios
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        # Añadir cabecera personalizada para saber si la respuesta vino del caché
        add_header X-Cache-Status $upstream_cache_status;

        # Controlar caché con headers (ej. Cache-Control, etc.)
        proxy_ignore_headers Cache-Control Expires;

        # Tiempo máximo de espera
        proxy_connect_timeout 5s;
        proxy_read_timeout 10s;
    }

    # Puedes definir ubicaciones específicas que usen o no caché
    # location /api/public {
    #     proxy_cache api_cache;
    #     proxy_pass http://api_backend;
    # }

    # Para endpoints dinámicos, puedes deshabilitar el caché
    # location /api/private {
    #     proxy_no_cache 1;
    #     proxy_pass http://api_backend;
    # }
}
